apiVersion: v1
data:
  API_PREFIX: /~api
  API_URL: https://api.nodescript.dev
  CAPTURE_PREFIX: /~capture
  DEPLOYMENT_GCP_CONTAINER_IMAGE: gcr.io/automation-cloud-registry/nodescript-service-runner
  DEPLOYMENT_GCP_SERVICE_ACCOUNT: nodescript-platform@automation-cloud-production.iam.gserviceaccount.com
  GCLOUD_ARTIFACTS_BUCKET: nodescript-platform-artifacts
  GCLOUD_LOCATION: europe-west1
  GCLOUD_PROJECT_ID: automation-cloud-production
  GOOGLE_REDIRECT_URI: https://nodescript.dev/googleAuthCallback
  GRAPH_CAPTURE_URL: https://capture.run.nodescript.dev/g/{graphId}
  GRAPH_SOURCE_URL: https://nodescript.dev/graph/{graphId}
  HUB_PREFIX: /~api
  INVOKE_PREFIX: /~invoke
  INVOKE_RECYCLE_THRESHOLD: "20000"
  LOG_LEVEL: info
  NS_ENV: production
  REGISTRY_PREFIX: /~registry
  REGISTRY_URL: https://registry.nodescript.dev
  WORKSPACE_DOMAIN_PATTERN: '{id}.run.nodescript.dev'
kind: ConfigMap
metadata:
  name: backend-config-tmft28gm4t
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  labels:
    monitor: "true"
  name: backend-api
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: backend-api
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    monitor: "true"
  name: backend-background
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: backend-background
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    monitor: "true"
  name: backend-invoke
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: backend-invoke
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    monitor: "true"
  name: backend-registry
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: backend-registry
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    monitor: "true"
  name: backend-schedule
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: backend-schedule
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-api
  namespace: default
spec:
  replicas: 3
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: backend-api
  template:
    metadata:
      labels:
        app: backend-api
    spec:
      automountServiceAccountToken: false
      containers:
      - command:
        - node
        - out/bin/api.js
        envFrom:
        - secretRef:
            name: backend-secrets
        - configMapRef:
            name: backend-config-tmft28gm4t
        image: gcr.io/automation-cloud-registry/nodescript-backend:3.61.6
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: backend-api
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /status
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 50m
            memory: 400Mi
      imagePullSecrets:
      - name: gcp-registry-access
      nodeSelector:
        workload/default: "true"
      terminationGracePeriodSeconds: 60
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-background
  namespace: default
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: backend-background
  template:
    metadata:
      labels:
        app: backend-background
    spec:
      automountServiceAccountToken: false
      containers:
      - command:
        - node
        - out/bin/background.js
        envFrom:
        - secretRef:
            name: backend-secrets
        - configMapRef:
            name: backend-config-tmft28gm4t
        image: gcr.io/automation-cloud-registry/nodescript-backend:3.61.6
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: backend-background
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /status
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 50m
            memory: 200Mi
      imagePullSecrets:
      - name: gcp-registry-access
      nodeSelector:
        workload/default: "true"
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-invoke
  namespace: default
spec:
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: backend-invoke
  template:
    metadata:
      labels:
        app: backend-invoke
    spec:
      automountServiceAccountToken: false
      containers:
      - command:
        - node
        - --experimental-network-imports
        - out/bin/invoke.js
        envFrom:
        - secretRef:
            name: backend-secrets
        - configMapRef:
            name: backend-config-tmft28gm4t
        image: gcr.io/automation-cloud-registry/nodescript-backend:3.61.6
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: backend-invoke
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /status
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            memory: 1200Mi
          requests:
            cpu: 200m
            memory: 400Mi
      imagePullSecrets:
      - name: gcp-registry-access
      nodeSelector:
        workload/compute: "true"
      terminationGracePeriodSeconds: 120
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-registry
  namespace: default
spec:
  replicas: 3
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: backend-registry
  template:
    metadata:
      labels:
        app: backend-registry
    spec:
      automountServiceAccountToken: false
      containers:
      - command:
        - node
        - out/bin/registry.js
        envFrom:
        - secretRef:
            name: backend-secrets
        - configMapRef:
            name: backend-config-tmft28gm4t
        image: gcr.io/automation-cloud-registry/nodescript-backend:3.61.6
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: backend-registry
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /status
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 400Mi
      imagePullSecrets:
      - name: gcp-registry-access
      nodeSelector:
        workload/default: "true"
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-schedule
  namespace: default
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: backend-schedule
  template:
    metadata:
      labels:
        app: backend-schedule
    spec:
      automountServiceAccountToken: false
      containers:
      - command:
        - node
        - out/bin/schedule.js
        envFrom:
        - secretRef:
            name: backend-secrets
        - configMapRef:
            name: backend-config-tmft28gm4t
        image: gcr.io/automation-cloud-registry/nodescript-backend:3.61.6
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: backend-schedule
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /status
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
      imagePullSecrets:
      - name: gcp-registry-access
      nodeSelector:
        workload/compute: "true"
      terminationGracePeriodSeconds: 120
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: backend-api
  namespace: default
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: backend-api
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: backend-background
  namespace: default
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: backend-background
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: backend-invoke
  namespace: default
spec:
  minAvailable: 4
  selector:
    matchLabels:
      app: backend-invoke
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: backend-registry
  namespace: default
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: backend-registry
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: backend-schedule
  namespace: default
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: backend-schedule
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-invoke-hpa
  namespace: default
spec:
  maxReplicas: 50
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 95
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend-invoke
