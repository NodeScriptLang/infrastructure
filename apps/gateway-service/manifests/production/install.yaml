apiVersion: v1
data:
  tiers.json: |
    [
        {
            "tier": "default",
            "targets": [
                "invoke-group-default-a.invoke.svc.cluster.local:8080",
                "invoke-group-default-b.invoke.svc.cluster.local:8080",
                "invoke-group-default-c.invoke.svc.cluster.local:8080",
                "invoke-group-default-d.invoke.svc.cluster.local:8080",
                "invoke-group-default-e.invoke.svc.cluster.local:8080",
                "invoke-group-default-f.invoke.svc.cluster.local:8080",
                "invoke-group-default-g.invoke.svc.cluster.local:8080",
                "invoke-group-default-h.invoke.svc.cluster.local:8080"
            ]
        },
        {
            "tier": "incubator",
            "targets": [
                "invoke-group-incubator-a.invoke.svc.cluster.local:8080",
                "invoke-group-incubator-b.invoke.svc.cluster.local:8080"
            ]
        },
        {
            "tier": "custom-ubio-flight-search",
            "targets": [
                "invoke-group-ubio-flight-search.invoke.svc.cluster.local:8080"
            ]
        }
    ]
kind: ConfigMap
metadata:
  name: gateway-service-tiers-bcb2btd56g
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metricsPort: "8081"
  name: gateway-service
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    targetPort: http
  - name: aux
    port: 8081
    targetPort: aux
  selector:
    app: gateway-service
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-service
  namespace: default
spec:
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: gateway-service
  template:
    metadata:
      labels:
        app: gateway-service
    spec:
      automountServiceAccountToken: false
      containers:
      - command:
        - node
        - out/bin/run.js
        env:
        - name: HTTP_PORT
          value: "8080"
        - name: AUX_HTTP_PORT
          value: "8081"
        - name: HTTP_TIMEOUT
          value: "300000"
        - name: INVOKE_TIERS
          valueFrom:
            configMapKeyRef:
              key: tiers.json
              name: gateway-service-tiers-bcb2btd56g
        envFrom:
        - secretRef:
            name: backend-secrets
        image: europe-west1-docker.pkg.dev/nodescript-production/nodescript-image-registry/nodescript-backend:5.54.5
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /status
            port: aux
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: gateway-service
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8081
          name: aux
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /status
            port: aux
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            memory: 1000Mi
          requests:
            cpu: 400m
            memory: 400Mi
        workingDir: /app/packages/gateway-service
      imagePullSecrets:
      - name: gcp-registry-secret
      nodeSelector:
        workload/default: "true"
      terminationGracePeriodSeconds: 30
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: gateway-service
  namespace: default
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: gateway-service
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gateway-service
  namespace: default
spec:
  maxReplicas: 40
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 95
        type: Utilization
    type: Resource
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gateway-service
