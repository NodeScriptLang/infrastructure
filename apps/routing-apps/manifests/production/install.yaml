apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: route-api-service
  namespace: default
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`api.nodescript.dev`)
    services:
    - name: api-service
      port: 8080
  tls:
    secretName: nodescript-dev-certificate
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: route-cache-service
  namespace: default
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`cache.nodescript.dev`)
    services:
    - name: cache-service
      port: 8080
  tls:
    secretName: nodescript-dev-certificate
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: route-chat-to-workspace
  namespace: default
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`chat.nodescript.dev`)
    services:
    - name: chat-to-workspace
      port: 3000
  tls:
    secretName: nodescript-dev-certificate
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: route-docs
  namespace: default
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`docs.nodescript.dev`)
    services:
    - name: docs
      port: 8080
  tls:
    secretName: nodescript-dev-certificate
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: route-fetch-service
  namespace: default
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`fetch.nodescript.dev`)
    services:
    - name: fetch-service
      port: 8080
  tls:
    secretName: nodescript-dev-certificate
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: route-frontend
  namespace: default
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`nodescript.dev`)
    services:
    - name: frontend
      port: 8080
  - kind: Rule
    match: Host(`FRONTEND_EMBED_HOST`)
    services:
    - name: frontend
      port: 8080
  - kind: Rule
    match: Host(`notebooks.nodescript.dev`)
    services:
    - name: frontend
      port: 8080
  - kind: Rule
    match: HostRegexp(`{subdomain:[0-9a-zA-Z_-]+}.edge.nodescript.dev`)
    services:
    - name: frontend
      port: 8080
  tls:
    secretName: nodescript-dev-certificate
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: route-gateway-service
  namespace: default
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: HostRegexp(`{subdomain:[0-9a-z-]+}.run.nodescript.dev`)
    priority: 1000
    services:
    - name: gateway-service
      port: 8080
  tls:
    secretName: nodescript-dev-certificate
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: route-guides
  namespace: default
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`guides.nodescript.dev`)
    services:
    - name: guides
      port: 8900
  tls:
    secretName: nodescript-dev-certificate
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: route-payment-provider-service
  namespace: default
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`payment-provider.nodescript.dev`)
    services:
    - name: payment-provider-service
      port: 8080
  tls:
    secretName: nodescript-dev-certificate
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: route-registry-service
  namespace: default
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`registry.nodescript.dev`)
    services:
    - name: registry-service
      port: 8080
  tls:
    secretName: nodescript-dev-certificate
---
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: route-relay-service
  namespace: default
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`relay.nodescript.dev`)
    services:
    - name: relay-service
      port: 8080
  tls:
    secretName: nodescript-dev-certificate
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: route-ws-service
  namespace: default
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`api.nodescript.dev`) && Path(`/ws`)
    priority: 1000
    services:
    - name: ws-service
      port: 8080
  - kind: Rule
    match: Host(`api.nodescript.dev`) && PathPrefix(`/capture`)
    priority: 1000
    services:
    - name: ws-service
      port: 8080
  tls:
    secretName: nodescript-dev-certificate
