apiVersion: apps/v1
kind: Deployment
metadata:
  name: invoke-group-ubio-flight-search
spec:
  selector:
    matchLabels:
      app: invoke-group-ubio-flight-search
  revisionHistoryLimit: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 2
      maxSurge: 10
  # Note: these pods MUST NOT have common backend secrets
  # (e.g. do not mount secrets, do not push secrets to env)
  template:
    metadata:
      labels:
        app: invoke-group-ubio-flight-search
    spec:
      # Graceful termination should be greater than INVOKE_TIMEOUT in Gateway
      # Also HTTP_TIMEOUT should be greater than INVOKE_TIMEOUT
      terminationGracePeriodSeconds: 150
      # By default, Service Account credentials are mounted by K8s, allowing pods
      # to access Kube APIs.
      # This is disabled on ServiceAccount level, but here we duplicate it again
      # accessing K8s APIs should be prevented at all cost.
      automountServiceAccountToken: false
      imagePullSecrets:
        - name: gcp-registry-secret
      # Different tiers will be deployed into separate node pools
      nodeSelector:
        workload/invoke-ubio-flight-search: 'true'
      containers:
        - name: invoke-group-ubio-flight-search
          image: nodescript-invoke-service
          ports:
            - name: http
              containerPort: 8080
            - name: aux
              containerPort: 8081
          resources:
            requests:
              cpu: 600m
              memory: 1200Mi
            limits:
              memory: 2500Mi
          env:
            - name: HTTP_PORT
              value: '8080'
            - name: AUX_HTTP_PORT
              value: '8081'
            - name: HTTP_TIMEOUT # Note: custom HTTP socket timeout matches the invoke timeout for the workspace
              value: "300000"
          # Pods failing readiness checks will get disconnected from the service.
          # They should run frequently, as we should aggressively remove traffic from failing pods.
          readinessProbe:
            httpGet:
              path: /status
              port: aux
            # Every second, 5 sec timeout, 3 failures in a row => dead.
            initialDelaySeconds: 5
            periodSeconds: 1
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 5
          # Pods failing liveness probes get terminated by K8s.
          # These can be a little bit less aggressive.
          livenessProbe:
            httpGet:
              path: /status
              port: aux
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 5
          # Note stricter container security here.
          # Once again, do not add secrets!
          securityContext:
            procMount: Default
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
