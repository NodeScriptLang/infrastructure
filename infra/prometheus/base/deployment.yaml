apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      nodeSelector:
        workload/monitoring: "true"
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: prometheus
      serviceAccountName: prometheus
      automountServiceAccountToken: true
      volumes:
        - name: config
          configMap:
            name: prometheus-config
        - name: storage
          persistentVolumeClaim:
            claimName: prometheus-storage
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: prometheus
          image: prometheus
          args:
            - --config.file=/etc/prometheus/prometheus-config.yaml
            - --storage.tsdb.path=/data/prometheus
            - --storage.tsdb.retention.time=30d
            - --storage.tsdb.retention.size=50GB
          ports:
          - containerPort: 9090
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
            - name: storage
              mountPath: /data/prometheus
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
            limits:
              memory: 1Gi
          securityContext:
            runAsUser: 1000
            procMount: Default
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              drop: ['ALL']
              add: ['NET_BIND_SERVICE']
