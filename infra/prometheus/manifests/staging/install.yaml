apiVersion: v1
data:
  prometheus-config.yaml: |
    global:
      scrape_interval: 15s
      external_labels:
        project: nodescript

    scrape_configs:
      - job_name: 'k8s-services'
        kubernetes_sd_configs:
          - role: endpoints
            # Note: this does not work as expected, use relabel_configs to filter services
            # selectors:
            #   - role: service
            #     label: "monitor=true"
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_monitor]
            action: keep
            regex: "true"
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: service
kind: ConfigMap
metadata:
  name: prometheus-config-kdchg5ddfk
  namespace: monitoring
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: prometheus
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-storage
  namespace: monitoring
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: prometheus-storage-class
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.file=/etc/prometheus/prometheus-config.yaml
        - --web.config.file=/secrets/web.yaml
        - --storage.tsdb.path=/data/prometheus
        - --storage.tsdb.retention.time=2d
        - --storage.tsdb.retention.size=8GB
        image: prom/prometheus:v2.47.2
        name: prometheus
        ports:
        - containerPort: 9090
        resources:
          limits:
            memory: 2Gi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          procMount: Default
          readOnlyRootFilesystem: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /data/prometheus
          name: storage
        - mountPath: /etc/prometheus
          name: config
        - mountPath: /secrets
          name: secrets
      nodeSelector:
        workload/monitoring: "true"
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 1000
        runAsUser: 1000
      serviceAccountName: prometheus
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: prometheus-storage
      - configMap:
          name: prometheus-config-kdchg5ddfk
        name: config
      - name: secrets
        secret:
          secretName: prometheus-secrets
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: prometheus
  namespace: monitoring
spec:
  maxUnavailable: 0
  selector:
    matchLabels:
      app: prometheus
